from sklearn.metrics import mean_absolute_error, mean_squared_error
import numpy as np

# Split the data into training and testing sets
train = sales_by_date[:int(0.8*len(sales_by_date))]
test = sales_by_date[int(0.8*len(sales_by_date)):]

# Fit the ARIMA model on the training data
model = ARIMA(train, order=(5, 1, 0))
model_fit = model.fit()

# Predict on the test set
test_predictions = model_fit.forecast(steps=len(test))

# Calculate the error metrics
mae = mean_absolute_error(test, test_predictions)
rmse = np.sqrt(mean_squared_error(test, test_predictions))

print(f'Mean Absolute Error (MAE): {mae}')
print(f'Root Mean Squared Error (RMSE): {rmse}')
